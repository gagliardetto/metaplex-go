// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package nft_magiceden

import (
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
)

type LaunchStage struct {
	StageType   LaunchStageType
	StartTime   int64
	EndTime     int64
	WalletLimit *uint8 `bin:"optional"`
	Price       uint64
}

func (obj LaunchStage) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `StageType` param:
	err = encoder.Encode(obj.StageType)
	if err != nil {
		return err
	}
	// Serialize `StartTime` param:
	err = encoder.Encode(obj.StartTime)
	if err != nil {
		return err
	}
	// Serialize `EndTime` param:
	err = encoder.Encode(obj.EndTime)
	if err != nil {
		return err
	}
	// Serialize `WalletLimit` param (optional):
	{
		if obj.WalletLimit == nil {
			err = encoder.WriteBool(false)
			if err != nil {
				return err
			}
		} else {
			err = encoder.WriteBool(true)
			if err != nil {
				return err
			}
			err = encoder.Encode(obj.WalletLimit)
			if err != nil {
				return err
			}
		}
	}
	// Serialize `Price` param:
	err = encoder.Encode(obj.Price)
	if err != nil {
		return err
	}
	return nil
}

func (obj *LaunchStage) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `StageType`:
	err = decoder.Decode(&obj.StageType)
	if err != nil {
		return err
	}
	// Deserialize `StartTime`:
	err = decoder.Decode(&obj.StartTime)
	if err != nil {
		return err
	}
	// Deserialize `EndTime`:
	err = decoder.Decode(&obj.EndTime)
	if err != nil {
		return err
	}
	// Deserialize `WalletLimit` (optional):
	{
		ok, err := decoder.ReadBool()
		if err != nil {
			return err
		}
		if ok {
			err = decoder.Decode(&obj.WalletLimit)
			if err != nil {
				return err
			}
		}
	}
	// Deserialize `Price`:
	err = decoder.Decode(&obj.Price)
	if err != nil {
		return err
	}
	return nil
}

type InitializeCandyMachineArgs struct {
	CmBump           uint8
	LaunchStagesBump uint8
	Uuid             string
	ItemsAvailable   uint64
	Stages           []LaunchStage
}

func (obj InitializeCandyMachineArgs) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `CmBump` param:
	err = encoder.Encode(obj.CmBump)
	if err != nil {
		return err
	}
	// Serialize `LaunchStagesBump` param:
	err = encoder.Encode(obj.LaunchStagesBump)
	if err != nil {
		return err
	}
	// Serialize `Uuid` param:
	err = encoder.Encode(obj.Uuid)
	if err != nil {
		return err
	}
	// Serialize `ItemsAvailable` param:
	err = encoder.Encode(obj.ItemsAvailable)
	if err != nil {
		return err
	}
	// Serialize `Stages` param:
	err = encoder.Encode(obj.Stages)
	if err != nil {
		return err
	}
	return nil
}

func (obj *InitializeCandyMachineArgs) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `CmBump`:
	err = decoder.Decode(&obj.CmBump)
	if err != nil {
		return err
	}
	// Deserialize `LaunchStagesBump`:
	err = decoder.Decode(&obj.LaunchStagesBump)
	if err != nil {
		return err
	}
	// Deserialize `Uuid`:
	err = decoder.Decode(&obj.Uuid)
	if err != nil {
		return err
	}
	// Deserialize `ItemsAvailable`:
	err = decoder.Decode(&obj.ItemsAvailable)
	if err != nil {
		return err
	}
	// Deserialize `Stages`:
	err = decoder.Decode(&obj.Stages)
	if err != nil {
		return err
	}
	return nil
}

type Creator struct {
	Address  ag_solanago.PublicKey
	Verified bool
	Share    uint8
}

func (obj Creator) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Address` param:
	err = encoder.Encode(obj.Address)
	if err != nil {
		return err
	}
	// Serialize `Verified` param:
	err = encoder.Encode(obj.Verified)
	if err != nil {
		return err
	}
	// Serialize `Share` param:
	err = encoder.Encode(obj.Share)
	if err != nil {
		return err
	}
	return nil
}

func (obj *Creator) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Address`:
	err = decoder.Decode(&obj.Address)
	if err != nil {
		return err
	}
	// Deserialize `Verified`:
	err = decoder.Decode(&obj.Verified)
	if err != nil {
		return err
	}
	// Deserialize `Share`:
	err = decoder.Decode(&obj.Share)
	if err != nil {
		return err
	}
	return nil
}

type InitializeConfigArgs struct {
	Gateway              string
	Cid                  string
	Uuid                 string
	CollectionName       string
	Symbol               string
	SellerFeeBasisPoints uint16
	Creators             []Creator
	IsMutable            bool
	RetainAuthority      bool
}

func (obj InitializeConfigArgs) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Gateway` param:
	err = encoder.Encode(obj.Gateway)
	if err != nil {
		return err
	}
	// Serialize `Cid` param:
	err = encoder.Encode(obj.Cid)
	if err != nil {
		return err
	}
	// Serialize `Uuid` param:
	err = encoder.Encode(obj.Uuid)
	if err != nil {
		return err
	}
	// Serialize `CollectionName` param:
	err = encoder.Encode(obj.CollectionName)
	if err != nil {
		return err
	}
	// Serialize `Symbol` param:
	err = encoder.Encode(obj.Symbol)
	if err != nil {
		return err
	}
	// Serialize `SellerFeeBasisPoints` param:
	err = encoder.Encode(obj.SellerFeeBasisPoints)
	if err != nil {
		return err
	}
	// Serialize `Creators` param:
	err = encoder.Encode(obj.Creators)
	if err != nil {
		return err
	}
	// Serialize `IsMutable` param:
	err = encoder.Encode(obj.IsMutable)
	if err != nil {
		return err
	}
	// Serialize `RetainAuthority` param:
	err = encoder.Encode(obj.RetainAuthority)
	if err != nil {
		return err
	}
	return nil
}

func (obj *InitializeConfigArgs) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Gateway`:
	err = decoder.Decode(&obj.Gateway)
	if err != nil {
		return err
	}
	// Deserialize `Cid`:
	err = decoder.Decode(&obj.Cid)
	if err != nil {
		return err
	}
	// Deserialize `Uuid`:
	err = decoder.Decode(&obj.Uuid)
	if err != nil {
		return err
	}
	// Deserialize `CollectionName`:
	err = decoder.Decode(&obj.CollectionName)
	if err != nil {
		return err
	}
	// Deserialize `Symbol`:
	err = decoder.Decode(&obj.Symbol)
	if err != nil {
		return err
	}
	// Deserialize `SellerFeeBasisPoints`:
	err = decoder.Decode(&obj.SellerFeeBasisPoints)
	if err != nil {
		return err
	}
	// Deserialize `Creators`:
	err = decoder.Decode(&obj.Creators)
	if err != nil {
		return err
	}
	// Deserialize `IsMutable`:
	err = decoder.Decode(&obj.IsMutable)
	if err != nil {
		return err
	}
	// Deserialize `RetainAuthority`:
	err = decoder.Decode(&obj.RetainAuthority)
	if err != nil {
		return err
	}
	return nil
}

type LaunchStageType ag_binary.BorshEnum

const (
	LaunchStageTypeInvalid LaunchStageType = iota
	LaunchStageTypeNormalSale
	LaunchStageTypeRaffle
)

func (value LaunchStageType) String() string {
	switch value {
	case LaunchStageTypeInvalid:
		return "Invalid"
	case LaunchStageTypeNormalSale:
		return "NormalSale"
	case LaunchStageTypeRaffle:
		return "Raffle"
	default:
		return ""
	}
}
